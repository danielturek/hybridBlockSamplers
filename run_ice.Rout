
R version 3.4.1 (2017-06-30) -- "Single Candle"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(nimble, lib.loc = '~/Documents/')
nimble version 0.6-6 is loaded.
For more information on NIMBLE and a User Manual,
please visit http://R-nimble.org.

Attaching package: ‘nimble’

The following object is masked from ‘package:stats’:

    simulate

> nimbleOptions(MCMCprogressBar = FALSE)
> library(coda)
> setwd('~/github/hybridBlockSamplers')
> source('data/modelData.R')
defining model...
building model...
setting data and initial values...
running calculate on model (any error reports that follow may simply reflect missing values in model variables) ... 
checking model sizes and dimensions...
model building finished.
defining model...
building model...
setting data and initial values...
running calculate on model (any error reports that follow may simply reflect missing values in model variables) ... 
checking model sizes and dimensions... note that missing values (NAs) or non-finite values were found in model variables: lifted_x_oBi_minus_1_cB_times_a_plus_b_L9. This is not an error, but some or all variables may need to be initialized for certain algorithms to operate properly.
model building finished.
defining model...
building model...
setting data and initial values...
running calculate on model (any error reports that follow may simply reflect missing values in model variables) ... 
checking model sizes and dimensions... note that missing values (NAs) or non-finite values were found in model variables: lifted_x_oBi_minus_1_cB_times_a_plus_b_L8. This is not an error, but some or all variables may need to be initialized for certain algorithms to operate properly.
model building finished.
defining model...
building model...
setting data and initial values...
running calculate on model (any error reports that follow may simply reflect missing values in model variables) ... 
checking model sizes and dimensions... note that missing values (NAs) or non-finite values were found in model variables: betaprec, lifted_d1_over_sqrt_oPbetaprec_oBk_cB_cP_L13, sigma, tau. This is not an error, but some or all variables may need to be initialized for certain algorithms to operate properly.
model building finished.
defining model...
building model...
setting data and initial values...
running calculate on model (any error reports that follow may simply reflect missing values in model variables) ... 
checking model sizes and dimensions...
model building finished.
defining model...
building model...
setting data and initial values...
running calculate on model (any error reports that follow may simply reflect missing values in model variables) ... 
checking model sizes and dimensions...
model building finished.
> source('AFSS_to_RW_block_sampler.R')
> ##
> ##nreps <- 1
> nreps <- 10
> ##
> compareDF <- data.frame(sampler = NA, nfa = NA, nIter = NA, runTime = NA, minEfficiency = NA)
> allEffDF <-  data.frame(sampler = NA, nfa = NA, nIter = NA, runTime = NA, repNum = NA, param = NA, eff = NA)
> allSamplersTable <- data.frame(sampler = 'RW_block', nfa = NA)
> allSamplersTable <- rbind(allSamplersTable,
+                           expand.grid(sampler = 'RW_block_goodCov', nfa = NA))
> allSamplersTable <- rbind(allSamplersTable,
+                           expand.grid(sampler = 'AF_slice',
+                                       nfa = NA))
> allSamplersTable <- rbind(allSamplersTable,
+                           expand.grid(sampler = 'AFSS_to_RW_block',
+                                       nfa = c(1,2,4,8)))
> ##
> modelName <- 'ice'
> ##
> model <- get(paste0(modelName,'Model'))
> code <- get(paste0(modelName, 'Code'))
> params <- get(paste0(modelName,'Params'))
> constants <- get(paste0(modelName, 'Consts'))
> inits <- get(paste0(modelName,'Initial'))
> data <- get(paste0(modelName, 'Data'))
> propCov <- get(paste0(modelName, 'GoodPropCov'))
> goodScale <- get(paste0(modelName, 'GoodScale'))
> ##iterVals <- get(paste0(modelName, 'NumIters'))
> ##
> iterVals <- c(1000,  2000,  5000, 10000, 20000, 50000, 100000)
> if(modelName == 'mhp')   iterVals <- c(1000, 2000, 5000, 10000)
> ##
> cmodel <- compileNimble(model)
compiling... this may take a minute. Use 'showCompilerOutput = TRUE' to see C++ compiler details.
compilation finished.
> ##
> for(samplerRowNum in 1:dim(allSamplersTable)[1]){
+     samplerRow <- allSamplersTable[samplerRowNum,]
+     sampler <- as.character(samplerRow$sampler)
+     print(samplerRow)
+     conf <- configureMCMC(model)
+     conf$removeSamplers(params)
+     if(sampler == 'RW_block'){
+         conf$addSampler(params, type = sampler, control = list())
+     }
+     else if(sampler == 'RW_block_goodCov'){
+         conf$addSampler(params, type = 'RW_block', control = list(propCov = propCov, scale = goodScale))
+     }
+     else if(sampler == 'AF_slice'){
+         conf$addSampler(params, type = 'AF_slice', control = list())
+     }
+     else if(sampler == 'AFSS_to_RW_block'){
+         conf$addSampler(params, type = 'AFSS_to_RW_block', 
+                         control = list(AF_sliceControl =  list(sliceWidths = 'oneVec',
+                                            sliceAdaptFactorMaxIter = 15000, sliceAdaptFactorInterval = 1000,
+                                            sliceAdaptWidthMaxIter = 512, sliceAdaptWidthTolerance = 0.1, sliceMaxSteps = 100),
+                             RWcontrol = list(propCov = diag(length(params)), scale = 1,
+                                 adaptInterval = 200, adaptScaleOnly = FALSE, adaptive = TRUE),
+                                        numFactorAdaptations = samplerRow$nfa))
+     }
+     mcmc <- buildMCMC(conf)
+     cmcmc <- compileNimble(mcmc)
+     cmodel$setInits(inits)
+     for(nIter in iterVals){
+         message(paste0('using nIter = ', as.character(nIter)))
+         mcmcTime <- numeric(nreps)
+         mcmcEff <- numeric(nreps)
+         cat('rep: ')
+         for(iter in 1:nreps){
+             cat(paste0(iter, ' '))
+             mcmcTime[iter] <- system.time(cmcmc$run(nIter))[['elapsed']]
+             ##browser()  ## ?????
+             effValues <- coda::effectiveSize(coda::as.mcmc(as.matrix(cmcmc$mvSamples)))/(mcmcTime[iter]+.01)
+             effValues <- effValues[!(names(effValues) %in% c('alpha[1]','be[2]','bep[4]','bp[4]'))]
+             effNames <- names(effValues)
+             effValues <- as.numeric(effValues)
+             mcmcEff[iter] <- min(effValues)
+             newRow <- cbind(samplerRow, data.frame(nIter = nIter, runTime = mcmcTime[iter], minEfficiency = mcmcEff[iter]))
+             compareDF <- rbind(compareDF, newRow)
+             newAllEffDF <- data.frame(sampler = sampler, nfa = samplerRow$nfa, nIter = nIter,
+                                       runTime = mcmcTime[iter], repNum = iter, param = effNames, eff = effValues,
+                                       stringsAsFactors = FALSE)
+             allEffDF <- rbind(allEffDF, newAllEffDF)
+         }
+         cat('
+ ')
+     }
+     if(all(is.na(compareDF[1,]))) compareDF <- compareDF[-1, ]
+     if(all(is.na(allEffDF[1,])))  allEffDF <-  allEffDF[-1, ]
+ }
   sampler nfa
1 RW_block  NA
compiling... this may take a minute. Use 'showCompilerOutput = TRUE' to see C++ compiler details.
compilation finished.
using nIter = 1000
rep: 1 2 3 4 5 6 7 8 9 10 
using nIter = 2000
rep: 1 2 3 4 5 6 7 8 9 10 
using nIter = 5000
rep: 1 2 3 4 5 6 7 8 9 10 
using nIter = 10000
rep: 1 2 3 4 5 6 7 8 9 10 
using nIter = 20000
rep: 1 2 3 4 5 6 7 8 9 10 
using nIter = 50000
rep: 1 2 3 4 5 6 7 8 9 10 
using nIter = 1e+05
rep: 1 2 3 4 5 6 7 8 9 10 
           sampler nfa
2 RW_block_goodCov  NA
compiling... this may take a minute. Use 'showCompilerOutput = TRUE' to see C++ compiler details.
compilation finished.
using nIter = 1000
rep: 1 2 3 4 5 6 7 8 9 10 
using nIter = 2000
rep: 1 2 3 4 5 6 7 8 9 10 
using nIter = 5000
rep: 1 2 3 4 5 6 7 8 9 10 
using nIter = 10000
rep: 1 2 3 4 5 6 7 8 9 10 
using nIter = 20000
rep: 1 2 3 4 5 6 7 8 9 10 
using nIter = 50000
rep: 1 2 3 4 5 6 7 8 9 10 
using nIter = 1e+05
rep: 1 2 3 4 5 6 7 8 9 10 
   sampler nfa
3 AF_slice  NA
compiling... this may take a minute. Use 'showCompilerOutput = TRUE' to see C++ compiler details.
compilation finished.
using nIter = 1000
rep: 1 2 3 4 5 6 7 8 9 10 
using nIter = 2000
rep: 1 2 3 4 5 6 7 8 9 10 
using nIter = 5000
rep: 1 2 3 4 5 6 7 8 9 10 
using nIter = 10000
rep: 1 2 3 4 5 6 7 8 9 10 
using nIter = 20000
rep: 1 2 3 4 5 6 7 8 9 10 
using nIter = 50000
rep: 1 2 3 4 5 6 7 8 9 10 
using nIter = 1e+05
rep: 1 2 3 4 5 6 7 8 9 10 
           sampler nfa
4 AFSS_to_RW_block   1
compiling... this may take a minute. Use 'showCompilerOutput = TRUE' to see C++ compiler details.
compilation finished.
using nIter = 1000
rep: 1 transitioning to RW_block sampler
2 transitioning to RW_block sampler
3 transitioning to RW_block sampler
4 transitioning to RW_block sampler
5 transitioning to RW_block sampler
6 transitioning to RW_block sampler
7 transitioning to RW_block sampler
8 transitioning to RW_block sampler
9 transitioning to RW_block sampler
10 transitioning to RW_block sampler

using nIter = 2000
rep: 1 transitioning to RW_block sampler
2 transitioning to RW_block sampler
3 transitioning to RW_block sampler
4 transitioning to RW_block sampler
5 transitioning to RW_block sampler
6 transitioning to RW_block sampler
7 transitioning to RW_block sampler
8 transitioning to RW_block sampler
9 transitioning to RW_block sampler
10 transitioning to RW_block sampler

using nIter = 5000
rep: 1 transitioning to RW_block sampler
2 transitioning to RW_block sampler
3 transitioning to RW_block sampler
4 transitioning to RW_block sampler
5 transitioning to RW_block sampler
6 transitioning to RW_block sampler
7 transitioning to RW_block sampler
8 transitioning to RW_block sampler
9 transitioning to RW_block sampler
10 transitioning to RW_block sampler

using nIter = 10000
rep: 1 transitioning to RW_block sampler
2 transitioning to RW_block sampler
3 transitioning to RW_block sampler
4 transitioning to RW_block sampler
5 transitioning to RW_block sampler
6 transitioning to RW_block sampler
7 transitioning to RW_block sampler
8 transitioning to RW_block sampler
9 transitioning to RW_block sampler
10 transitioning to RW_block sampler

using nIter = 20000
rep: 1 transitioning to RW_block sampler
2 transitioning to RW_block sampler
3 transitioning to RW_block sampler
4 transitioning to RW_block sampler
5 transitioning to RW_block sampler
6 transitioning to RW_block sampler
7 transitioning to RW_block sampler
8 transitioning to RW_block sampler
9 transitioning to RW_block sampler
10 transitioning to RW_block sampler

using nIter = 50000
rep: 1 transitioning to RW_block sampler
2 transitioning to RW_block sampler
3 transitioning to RW_block sampler
4 transitioning to RW_block sampler
5 transitioning to RW_block sampler
6 transitioning to RW_block sampler
7 transitioning to RW_block sampler
8 transitioning to RW_block sampler
9 transitioning to RW_block sampler
10 transitioning to RW_block sampler

using nIter = 1e+05
rep: 1 transitioning to RW_block sampler
2 transitioning to RW_block sampler
3 transitioning to RW_block sampler
4 transitioning to RW_block sampler
5 transitioning to RW_block sampler
6 transitioning to RW_block sampler
7 transitioning to RW_block sampler
8 transitioning to RW_block sampler
9 transitioning to RW_block sampler
10 transitioning to RW_block sampler

           sampler nfa
5 AFSS_to_RW_block   2
compiling... this may take a minute. Use 'showCompilerOutput = TRUE' to see C++ compiler details.
compilation finished.
using nIter = 1000
rep: 1 2 3 4 5 6 7 8 9 10 
using nIter = 2000
rep: 1 transitioning to RW_block sampler
2 transitioning to RW_block sampler
3 transitioning to RW_block sampler
4 transitioning to RW_block sampler
5 transitioning to RW_block sampler
6 transitioning to RW_block sampler
7 transitioning to RW_block sampler
8 transitioning to RW_block sampler
9 transitioning to RW_block sampler
10 transitioning to RW_block sampler

using nIter = 5000
rep: 1 transitioning to RW_block sampler
2 transitioning to RW_block sampler
3 transitioning to RW_block sampler
4 transitioning to RW_block sampler
5 transitioning to RW_block sampler
6 transitioning to RW_block sampler
7 transitioning to RW_block sampler
8 transitioning to RW_block sampler
9 transitioning to RW_block sampler
10 transitioning to RW_block sampler

using nIter = 10000
rep: 1 transitioning to RW_block sampler
2 transitioning to RW_block sampler
3 transitioning to RW_block sampler
4 transitioning to RW_block sampler
5 transitioning to RW_block sampler
6 transitioning to RW_block sampler
7 transitioning to RW_block sampler
8 transitioning to RW_block sampler
9 transitioning to RW_block sampler
10 transitioning to RW_block sampler

using nIter = 20000
rep: 1 transitioning to RW_block sampler
2 transitioning to RW_block sampler
3 transitioning to RW_block sampler
4 transitioning to RW_block sampler
5 transitioning to RW_block sampler
6 transitioning to RW_block sampler
7 transitioning to RW_block sampler
8 transitioning to RW_block sampler
9 transitioning to RW_block sampler
10 transitioning to RW_block sampler

using nIter = 50000
rep: 1 transitioning to RW_block sampler
2 transitioning to RW_block sampler
3 transitioning to RW_block sampler
4 transitioning to RW_block sampler
5 transitioning to RW_block sampler
6 transitioning to RW_block sampler
7 transitioning to RW_block sampler
8 transitioning to RW_block sampler
9 transitioning to RW_block sampler
10 transitioning to RW_block sampler

using nIter = 1e+05
rep: 1 transitioning to RW_block sampler
2 transitioning to RW_block sampler
3 transitioning to RW_block sampler
4 transitioning to RW_block sampler
5 transitioning to RW_block sampler
6 transitioning to RW_block sampler
7 transitioning to RW_block sampler
8 transitioning to RW_block sampler
9 transitioning to RW_block sampler
10 transitioning to RW_block sampler

           sampler nfa
6 AFSS_to_RW_block   4
compiling... this may take a minute. Use 'showCompilerOutput = TRUE' to see C++ compiler details.
compilation finished.
using nIter = 1000
rep: 1 2 3 4 5 6 7 8 9 10 
using nIter = 2000
rep: 1 2 3 4 5 6 7 8 9 10 
using nIter = 5000
rep: 1 transitioning to RW_block sampler
2 transitioning to RW_block sampler
3 transitioning to RW_block sampler
4 transitioning to RW_block sampler
5 transitioning to RW_block sampler
6 transitioning to RW_block sampler
7 transitioning to RW_block sampler
8 transitioning to RW_block sampler
9 transitioning to RW_block sampler
10 transitioning to RW_block sampler

using nIter = 10000
rep: 1 transitioning to RW_block sampler
2 transitioning to RW_block sampler
3 transitioning to RW_block sampler
4 transitioning to RW_block sampler
5 transitioning to RW_block sampler
6 transitioning to RW_block sampler
7 transitioning to RW_block sampler
8 transitioning to RW_block sampler
9 transitioning to RW_block sampler
10 transitioning to RW_block sampler

using nIter = 20000
rep: 1 transitioning to RW_block sampler
2 transitioning to RW_block sampler
3 transitioning to RW_block sampler
4 transitioning to RW_block sampler
5 transitioning to RW_block sampler
6 transitioning to RW_block sampler
7 transitioning to RW_block sampler
8 transitioning to RW_block sampler
9 transitioning to RW_block sampler
10 transitioning to RW_block sampler

using nIter = 50000
rep: 1 transitioning to RW_block sampler
2 transitioning to RW_block sampler
3 transitioning to RW_block sampler
4 transitioning to RW_block sampler
5 transitioning to RW_block sampler
6 transitioning to RW_block sampler
7 transitioning to RW_block sampler
8 transitioning to RW_block sampler
9 transitioning to RW_block sampler
10 transitioning to RW_block sampler

using nIter = 1e+05
rep: 1 transitioning to RW_block sampler
2 transitioning to RW_block sampler
3 transitioning to RW_block sampler
4 transitioning to RW_block sampler
5 transitioning to RW_block sampler
6 transitioning to RW_block sampler
7 transitioning to RW_block sampler
8 transitioning to RW_block sampler
9 transitioning to RW_block sampler
10 transitioning to RW_block sampler

           sampler nfa
7 AFSS_to_RW_block   8
compiling... this may take a minute. Use 'showCompilerOutput = TRUE' to see C++ compiler details.
compilation finished.
using nIter = 1000
rep: 1 2 3 4 5 6 7 8 9 10 
using nIter = 2000
rep: 1 2 3 4 5 6 7 8 9 10 
using nIter = 5000
rep: 1 2 3 4 5 6 7 8 9 10 
using nIter = 10000
rep: 1 transitioning to RW_block sampler
2 transitioning to RW_block sampler
3 transitioning to RW_block sampler
4 transitioning to RW_block sampler
5 transitioning to RW_block sampler
6 transitioning to RW_block sampler
7 transitioning to RW_block sampler
8 transitioning to RW_block sampler
9 transitioning to RW_block sampler
10 transitioning to RW_block sampler

using nIter = 20000
rep: 1 transitioning to RW_block sampler
2 transitioning to RW_block sampler
3 transitioning to RW_block sampler
4 transitioning to RW_block sampler
5 transitioning to RW_block sampler
6 transitioning to RW_block sampler
7 transitioning to RW_block sampler
8 transitioning to RW_block sampler
9 transitioning to RW_block sampler
10 transitioning to RW_block sampler

using nIter = 50000
rep: 1 transitioning to RW_block sampler
2 transitioning to RW_block sampler
3 transitioning to RW_block sampler
4 transitioning to RW_block sampler
5 transitioning to RW_block sampler
6 transitioning to RW_block sampler
7 transitioning to RW_block sampler
8 transitioning to RW_block sampler
9 transitioning to RW_block sampler
10 transitioning to RW_block sampler

using nIter = 1e+05
rep: 1 transitioning to RW_block sampler
2 transitioning to RW_block sampler
3 transitioning to RW_block sampler
4 transitioning to RW_block sampler
5 transitioning to RW_block sampler
6 transitioning to RW_block sampler
7 transitioning to RW_block sampler
8 transitioning to RW_block sampler
9 transitioning to RW_block sampler
10 transitioning to RW_block sampler

> ##
> filename <- paste0('results/', modelName, 'Results.RData')
> save(compareDF, allEffDF, file = filename)
> 
> 
> proc.time()
    user   system  elapsed 
5318.384   21.592 5341.167 
